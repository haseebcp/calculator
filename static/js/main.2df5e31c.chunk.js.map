{"version":3,"sources":["number.js","comp1.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Numbers","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","initialstate","result","symbolClick","bind","assertThisInitialized","numClick","getResult","clear","num1","num2","op","c","_this2","setState","parseInt","document","getElementById","textContent","isNaN","n","_this3","_this4","numbers","i","push","react_default","a","createElement","className","key","value","onClick","e","id","Component","CompOne","handleClick","number","React","Boolean","window","location","hostname","match","ReactDOM","render","src_comp1","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2df5e31c.chunk.js","sourcesContent":["import React,{Component} from \"react\"\n\nclass Numbers extends Component {\nget initialstate(){\n  return {\n    num1:\"\",\n    num2:\"\",\n    op:\"\",\n  }\n};\n  constructor() {\n    super();\n    this.state=this.initialstate;\n    this.state.result=0;\n    this.symbolClick=this.symbolClick.bind(this);\n    this.numClick=this.numClick.bind(this);\n    this.getResult=this.getResult.bind(this);\n    this.clear=this.clear.bind(this);\n  }\n  clear(c){\n    if(c){\n      this.setState({result:0});\n    }\n     this.setState(()=>this.initialstate);\n  }\n  getResult(){\n\n    switch (this.state.op) {\n\n      case'+':\n\n        this.setState({result:parseInt(this.state.num1)+parseInt(this.state.num2)})\n        break;\n      case '-':\n        this.setState({result:parseInt(this.state.num1)-parseInt(this.state.num2)})\n        break;\n      case document.getElementById('mul').textContent:\n         this.setState({result:parseInt(this.state.num1)*parseInt(this.state.num2)})\n        break;\n      case document.getElementById('divs').textContent:\n        this.setState({result:isNaN(parseInt(this.state.num1)/parseInt(this.state.num2))?\"E\":parseInt(this.state.num1)/parseInt(this.state.num2)})\n        break;\n      default:\n\n    }\n   this.clear();\n\n  }\n  numClick(n){\n      if(this.state.op==\"\"){\n        this.setState({num1:this.state.num1+\"\"+\"\"+n,result:this.state.num1+\"\"+\"\"+n})\n      }else{\n        this.setState({num2:this.state.num2+\"\"+\"\"+n,result:this.state.num1+this.state.op+this.state.num2+\"\"+\"\"+n})\n      }\n\n  }\n  symbolClick(op){\n   if(!this.state.num1||(this.state.num1&&this.state.num2)){\n      return;\n    }\n    switch (op) {\n      case'+':\n       this.setState(()=>{this.state.op='+'})\n        break;\n      case '-':\n        this.setState(()=>{this.state.op='-'})\n        break;\n      case '*':\n          this.setState(()=>{this.state.op= document.getElementById('mul').textContent})\n        break;\n      case '/':\n        this.setState(()=>{this.state.op=document.getElementById('divs').textContent})\n      break;\n      default:\n    }\n\n  }\n  render(){\n    var numbers=[];\n    for(var i=0;i<10;i++){\n     numbers.push(<button className=\"btn number-btn number-btn\" key={i} value={i} onClick={this.numClick.bind(null,i)}>{i}</button>);\n     }\n    return(\n\n    <div className=\"num-wrap\">\n      <div  className=\"textfield\" >{this.state.result}</div>\n\n      <button className=\"btn btn-primary\"  onClick={(e)=>this.symbolClick('+')}>+</button>\n      <button className=\"btn btn-primary\"  onClick={(e)=>this.symbolClick('-')}>-</button>\n      <button id=\"mul\" className=\"btn btn-primary\"  onClick={(e)=>this.symbolClick('*')}>&#215;</button>\n      <button id=\"divs\" className=\"btn btn-primary\"  onClick={(e)=>this.symbolClick('/')}>&#247;</button>\n      {numbers}\n      <button className=\"btn btn-success\" onClick={this.getResult}>=</button>\n      <button className=\"btn btn-danger\" onClick={this.clear}>C</button>\n    </div>\n  )\n  }\n}\nexport default Numbers\n","import React,{Component} from \"react\"\nimport Numbers from \"./number\";\nimport \"./comp1.css\";\nclass CompOne extends React.Component {\n  constructor() {\n    super();\n    this.state={\n      value:\"green\"\n    }\n    this.handleClick=this.handleClick.bind(this);\n  };\n  handleClick() {\n    this.setState({\n      value: 'blue'\n    })\n  };\n  render(){\n\n    return(\n      <div className=\"container\">\n      <Numbers/>\n      </div>\n    );\n  }\n}\nexport default CompOne;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CompOne from './comp1';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n         </header>\n        <CompOne/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CompOne from './comp1';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<CompOne />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}